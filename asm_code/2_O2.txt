
static_test.o:     file format elf64-x86-64

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00000075  0000000000000000  0000000000000000  00000040  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  0000000000000000  0000000000000000  000000b5  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  0000000000000000  0000000000000000  000000b8  2**2
                  ALLOC
  3 .rodata       0000000d  0000000000000000  0000000000000000  000000b8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .comment      0000002c  0000000000000000  0000000000000000  000000c5  2**0
                  CONTENTS, READONLY
  5 .note.GNU-stack 00000000  0000000000000000  0000000000000000  000000f1  2**0
                  CONTENTS, READONLY
  6 .note.gnu.property 00000020  0000000000000000  0000000000000000  000000f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .eh_frame     00000058  0000000000000000  0000000000000000  00000118  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 static_test.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000000 l     O .bss	0000000000000004 y.0
0000000000000000 g     F .text	0000000000000048 my_function
0000000000000000         *UND*	0000000000000000 printf
0000000000000048 g     F .text	000000000000002d main



Disassembly of section .text:

0000000000000000 <my_function>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  13:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 19 <my_function+0x19>
  19:	8b 45 fc             	mov    -0x4(%rbp),%eax
  1c:	89 c6                	mov    %eax,%esi
  1e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 25 <my_function+0x25>
  25:	48 89 c7             	mov    %rax,%rdi
  28:	b8 00 00 00 00       	mov    $0x0,%eax
  2d:	e8 00 00 00 00       	call   32 <my_function+0x32>
  32:	83 45 fc 05          	addl   $0x5,-0x4(%rbp)
  36:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 3c <my_function+0x3c>
  3c:	83 c0 05             	add    $0x5,%eax
  3f:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 45 <my_function+0x45>
  45:	90                   	nop
  46:	c9                   	leave  
  47:	c3                   	ret    

0000000000000048 <main>:
  48:	f3 0f 1e fa          	endbr64 
  4c:	55                   	push   %rbp
  4d:	48 89 e5             	mov    %rsp,%rbp
  50:	b8 00 00 00 00       	mov    $0x0,%eax
  55:	e8 00 00 00 00       	call   5a <main+0x12>
  5a:	b8 00 00 00 00       	mov    $0x0,%eax
  5f:	e8 00 00 00 00       	call   64 <main+0x1c>
  64:	b8 00 00 00 00       	mov    $0x0,%eax
  69:	e8 00 00 00 00       	call   6e <main+0x26>
  6e:	b8 00 00 00 00       	mov    $0x0,%eax
  73:	5d                   	pop    %rbp
  74:	c3                   	ret    
